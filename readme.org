#+title: build.c: build.zig in C

Opinionated proof-of-concept build system using C:
- No external dependencies.
- Think build.zig *in* C, or a Makefile on steroids. Describe how to build your project in C.
- Heavily relies on Arena allocators for stress free memory management.
- No null terminated strings.
- [WIP] Basic cross-platform abstraction (only linux for now)

#+begin_src shell
  cc -o cbuild cbuild.c && ./cbuild
#+end_src

* Design considerations

** TODO Create a thread local context struct that has information about:
1. Scratch Arena, needed to make inferface null-terminated string free.
2. Stderr buffered output
3. Logging state(indentation, current write buffer)

This introduces the /problem/ of having global state.
Maybe we could still have the explicit API but just /glue/ with a global context.

*** How does sokol abstract platforms?

Seems like sokol implement the functions for all platforms but just return null if the
platforms lacks support for a particular backend/feature.
For example:

#+begin_src C
  SOKOL_API_IMPL sg_context_desc sapp_sgcontext(void) {
      sg_context_desc desc;
      memset(&desc, 0, sizeof(desc));
      desc.color_format = (sg_pixel_format) sapp_color_format();
      desc.depth_format = (sg_pixel_format) sapp_depth_format();
      desc.sample_count = sapp_sample_count();
      desc.metal.device = sapp_metal_get_device();
      desc.metal.renderpass_descriptor_cb = sapp_metal_get_renderpass_descriptor;
      desc.metal.drawable_cb = sapp_metal_get_drawable;
      desc.d3d11.device = sapp_d3d11_get_device();
      desc.d3d11.device_context = sapp_d3d11_get_device_context();
      desc.d3d11.render_target_view_cb = sapp_d3d11_get_render_target_view;
      desc.d3d11.depth_stencil_view_cb = sapp_d3d11_get_depth_stencil_view;
      desc.wgpu.device = sapp_wgpu_get_device();
      desc.wgpu.render_view_cb = sapp_wgpu_get_render_view;
      desc.wgpu.resolve_view_cb = sapp_wgpu_get_resolve_view;
      desc.wgpu.depth_stencil_view_cb = sapp_wgpu_get_depth_stencil_view;
      return desc;
  }
#+end_src

All functions are defined for all platforms however they just return a null pointer.
This is for sokols context descriptor(=sg_context_desc=) maybe we also could have a similar thing.
